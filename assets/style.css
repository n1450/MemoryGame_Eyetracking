@font-face {
    font-family: DancingScript;
    src: url(./DancingScript-VariableFont_wght.ttf);
}
@font-face {
    font-family: Fredoka;
    src: url(./FredokaOne-Regular.ttf);
}

html {
    width: 100%;
    height: 100%;
    background: linear-gradient(320deg,  #6f00fc 0%,#fc7900 50%,#fcc700 100%); /**color transition**/
    font-family: Fredoka;
}
body{
    height: 100%;
    overflow: hidden;
}

.game {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.controls {
    display: flex;
    gap: 20px;
    margin-bottom: 20px;
}

button {
    background: #282A3A;
    color: #FFF;
    border-radius: 5px;
    padding: 10px 20px;
    border: 0;
    cursor: pointer;
    font-family: DancingScript;
    font-size: 18pt;
}

.disabled {
    color: #757575;
}

.stats {
    color: #FFF;
    font-size: 14pt;
}

.board-container {
    position: relative;
}

.board,
.win {
    border-radius: 5px;
    box-shadow: 0 25px 50px rgb(33 33 33 / 25%);
    background: linear-gradient(135deg,  #6f00fc 0%,#fc7900 50%,#fcc700 100%);
    transition: transform .6s cubic-bezier(0.4, 0.0, 0.2, 1);
    backface-visibility: hidden;
}

.board {
    padding: 20px;
    display: grid;
    grid-template-columns: repeat(4, auto);
    grid-gap: 20px;
}

.board-container.flipped .board {
    transform: rotateY(180deg) rotateZ(50deg);
}

.board-container.flipped .win {
    transform: rotateY(0) rotateZ(0);
}

.card {
    position: relative;
    width: 100px;
    height: 100px;
    cursor: pointer;
}

.card-front,
.card-back {
    position: absolute;
    border-radius: 5px;
    width: 100%;
    height: 100%;
    background: #282A3A;
    transition: transform .6s cubic-bezier(0.4, 0.0, 0.2, 1); /*flipping animation*/
    backface-visibility: hidden; /*we won´t see the emoji if the card is flipped*/
}

.card-back {
    transform: rotateY(180deg) rotateZ(50deg); /*rotate the card 180deg away from us*/
    font-size: 28pt;
    user-select: none; /*we don´t want the text to be selectable*/
    text-align: center;
    line-height: 100px;
    background: #FDF8E6;
}

/*We can use a helper class called .flipped to set the rotate back to 0 and set the rotate for the front of the card to 180 degrees.*/

.card.flipped .card-front {
    transform: rotateY(180deg) rotateZ(50deg);
}

.card.flipped .card-back {
    transform: rotateY(0) rotateZ(0);
}

/*The same rules are used for the entire board so that when the player wins, the entire board is flipped to its back.*/
.win {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    text-align: center;
    background: #FDF8E6;
    transform: rotateY(180deg) rotateZ(50deg);
}

.win-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 21pt;
    color: #282A3A;
}

.highlight {
    color: #6f00fc;
}
.img-mouse-pointer {
    pointer-events: none;
    /* doing this makes sure .elementFromPoint
    do not acquires the image cursor object */
    position: absolute;
    z-index: 999
}
 /*makes the cursor invisible 
      
* {
    cursor: none;
}*/